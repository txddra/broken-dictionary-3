# Query: mongoose
# ContextLines: 1

18 results - 5 files

app.js:
   5  const logger = require('morgan');
   6: const mongoose = require('mongoose');
   7  const methodOverride = require('method-override');

  12  
  13: mongoose
  14    .connect(env.MONGODB_URI, {

package-lock.json:
  341      },
  342:     "mongoose": {
  343        "version": "5.10.9",
  344:       "resolved": "https://registry.npmjs.org/mongoose/-/mongoose-5.10.9.tgz",
  345        "integrity": "sha512-7dkr1d6Uyk87hELzoc6B7Zo7kkPTx8rKummk51Y0je2V2Ttsw0KFPwTp1G8JIbBta7Wpw8j15PJi0d33Ode2nw==",

  349          "mongodb": "3.6.2",
  350:         "mongoose-legacy-pluralize": "1.0.2",
  351          "mpath": "0.7.0",

  371      },
  372:     "mongoose-legacy-pluralize": {
  373        "version": "1.0.2",
  374:       "resolved": "https://registry.npmjs.org/mongoose-legacy-pluralize/-/mongoose-legacy-pluralize-1.0.2.tgz",
  375        "integrity": "sha512-Yo/7qQU4/EyIS8YDFSeenIvXxZN+ld7YdV9LqFVQJzTLye8unujAWPZ4NWKfFA+RNjh+wvTWKY9Z3E5XM6ZZiQ=="

package.json:
  18      "moment": "^2.29.1",
  19:     "mongoose": "^5.10.9",
  20      "morgan": "~1.9.1"

seedDb.js:
   1: const mongoose = require('mongoose');
   2  const Words = require('./routes/Words/models/Word');

  11  
  12:     await mongoose.disconnect();
  13  

  22  
  23: mongoose
  24    .connect(process.env.MONGODB_URI, {

  30      console.log('MongoDB Connected');
  31:     mongoose.connection.db.dropDatabase();
  32    })

routes/Words/models/Word.js:
   2  
   3: const WordSchema = new mongoose.Schema({
   4    word: { type: String, required: true, lowercase: true, unique: true },

  12  
  13: module.exports = mongoose.model('word', WordSchema);
